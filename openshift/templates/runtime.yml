# Template
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: www
labels:
  template: www

parameters:
  - name: "NAMESPACE"
    required: false
  - name: "ENVIRONMENT"
    required: true
  - name: "APP_NAME"
    required: true
  - name: "WORDPRESS_CURRENT_SITE"
    required: true
  - name: "RESOURCES_REQUEST_CPU"
    required: true
  - name: "RESOURCES_REQUEST_MEMORY"
    required: true
  - name: "RESOURCES_LIMIT_CPU"
    required: true
  - name: "RESOURCES_LIMIT_MEMORY"
    required: true

objects:

  # Persistent Volume Claim
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: www-wp-uploads
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: gp2-csi

  
  # DeploymentConfig
  - apiVersion: apps/v1
    kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      name: ${APP_NAME}
    spec:
      strategy:
        type: Recreate
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${APP_NAME}
            from:
              kind: ImageStreamTag
              name: ${APP_NAME}:${ENVIRONMENT}
      replicas: 1
      revisionHistoryLimit: 1
      selector:
        app: ${APP_NAME}
        deploymentconfig: ${APP_NAME}
      template:
        metadata:
          labels:
            app: ${APP_NAME}
            deploymentconfig: ${APP_NAME}
            technology: mysql
            backup: daily
        spec:
          containers:
            - name: ${APP_NAME}
              image: ""
              imagePullPolicy: Always
              resources:
                requests:
                  cpu: ${RESOURCES_REQUEST_CPU}
                  memory: ${RESOURCES_REQUEST_MEMORY}
                limits:
                  cpu: ${RESOURCES_LIMIT_CPU}
                  memory: ${RESOURCES_LIMIT_MEMORY}
              ports:
                - containerPort: 8080
                  name: http
              volumeMounts:
                - name: www-wp-uploads
                  mountPath: /var/www/html/wp-content/uploads
              readinessProbe:
                timeoutSeconds: 3
                initialDelaySeconds: 3
                exec:
                  command:
                  - curl
                  - -H
                  - "X-K8S-PROBE: dummy"
                  - http://127.0.0.1:8080/health.php
              livenessProbe:
                timeoutSeconds: 10
                initialDelaySeconds: 360
                exec:
                  command:
                  - curl
                  - -H
                  - "X-K8S-PROBE: dummy"
                  - http://127.0.0.1:8080/health.php
              envFrom:
              - secretRef:
                  name: ${APP_NAME}-db
                prefix: WORDPRESS_DB_
              - secretRef:
                  name: ${APP_NAME}-db
                prefix: MYSQL_ 
              env:
                - name: ENVIRONMENT
                  value: ${ENVIRONMENT}
                - name: K8S_PROBE
                  value: dummy
                - name: WORDPRESS_TABLE_PREFIX
                  value: idhv_
                - name: WORDPRESS_CURRENT_SITE
                  value: ${WORDPRESS_CURRENT_SITE}
          volumes:
          - name: www-wp-uploads
            persistentVolumeClaim:
              claimName: www-wp-uploads
  
  # Service
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
      - name: 8443-tcp
        port: 8443
        protocol: TCP
        targetPort: 8443
      selector:
        app: ${APP_NAME}
        deploymentconfig: ${APP_NAME}
      sessionAffinity: None
      type: ClusterIP
  
  # Route
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      annotations:
        haproxy.router.openshift.io/hsts_header: max-age=31536000
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: ${APP_NAME}
        weight: 100
      wildcardPolicy: None
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Allow
